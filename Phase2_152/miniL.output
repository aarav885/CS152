Grammar

    0 $accept: prog_start $end

    1 prog_start: %empty
    2           | function prog_start

    3 function: FUNCTION func_ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    4 func_ident: IDENT

    5 declarations: %empty
    6             | declaration SEMICOLON declarations

    7 declaration: identifiers COLON INTEGER
    8            | identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    9 identifiers: ident
   10            | ident COMMA identifiers

   11 ident: IDENT

   12 statements: statement SEMICOLON
   13           | statement SEMICOLON statements

   14 statement: vars ASSIGN expression
   15          | IF bool_exp THEN statements ENDIF
   16          | IF bool_exp THEN statements ELSE statements ENDIF
   17          | WHILE bool_exp BEGINLOOP statements ENDLOOP
   18          | DO BEGINLOOP statements ENDLOOP WHILE bool_exp
   19          | READ vars
   20          | WRITE vars
   21          | CONTINUE
   22          | RETURN expression

   23 bool_exp: relation_and_expr
   24         | relation_and_expr OR bool_exp

   25 relation_and_expr: relation_expr_inv
   26                  | relation_expr_inv AND relation_and_expr

   27 relation_expr_inv: NOT relation_expr_inv
   28                  | relation_expr

   29 relation_expr: expression comp expression
   30              | TRUE
   31              | FALSE
   32              | L_PAREN bool_exp R_PAREN

   33 comp: EQ
   34     | NEQ
   35     | LT
   36     | GT
   37     | LTE
   38     | GTE

   39 expressions: expression
   40            | expression COMMA expressions

   41 expression: multiplicative_expr
   42           | multiplicative_expr ADD expression
   43           | multiplicative_expr SUB expression

   44 multiplicative_expr: term
   45                    | term MULT multiplicative_expr
   46                    | term DIV multiplicative_expr
   47                    | term MOD multiplicative_expr

   48 term: var
   49     | SUB var
   50     | NUMBER
   51     | SUB NUMBER
   52     | L_PAREN expression R_PAREN
   53     | SUB L_PAREN expression R_PAREN
   54     | ident L_PAREN R_PAREN
   55     | ident L_PAREN expressions R_PAREN

   56 vars: var
   57     | var COMMA vars

   58 var: ident
   59    | ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET


Terminals, with rules where they appear

$end (0) 0
error (256)
NUMBER (258) 8 50 51
IDENT (259) 4 11
FUNCTION (260) 3
BEGIN_PARAMS (261) 3
END_PARAMS (262) 3
BEGIN_LOCALS (263) 3
END_LOCALS (264) 3
BEGIN_BODY (265) 3
END_BODY (266) 3
INTEGER (267) 7 8
ARRAY (268) 8
OF (269) 8
IF (270) 15 16
THEN (271) 15 16
ENDIF (272) 15 16
ELSE (273) 16
WHILE (274) 17 18
DO (275) 18
BEGINLOOP (276) 17 18
ENDLOOP (277) 17 18
CONTINUE (278) 21
READ (279) 19
WRITE (280) 20
TRUE (281) 30
FALSE (282) 31
SEMICOLON (283) 3 6 12 13
COLON (284) 7 8
COMMA (285) 10 40 57
L_PAREN (286) 32 52 53 54 55
R_PAREN (287) 32 52 53 54 55
L_SQUARE_BRACKET (288) 8 59
R_SQUARE_BRACKET (289) 8 59
ASSIGN (290) 14
RETURN (291) 22
OR (292) 24
AND (293) 26
NOT (294) 27
LT (295) 35
LTE (296) 37
GT (297) 36
GTE (298) 38
EQ (299) 33
NEQ (300) 34
ADD (301) 42
SUB (302) 43 49 51 53
MULT (303) 45
DIV (304) 46
MOD (305) 47


Nonterminals, with rules where they appear

$accept (51)
    on left: 0
prog_start (52)
    on left: 1 2, on right: 0 2
function (53)
    on left: 3, on right: 2
func_ident (54)
    on left: 4, on right: 3
declarations (55)
    on left: 5 6, on right: 3 6
declaration (56)
    on left: 7 8, on right: 6
identifiers (57)
    on left: 9 10, on right: 7 8 10
ident (58)
    on left: 11, on right: 9 10 54 55 58 59
statements (59)
    on left: 12 13, on right: 3 13 15 16 17 18
statement (60)
    on left: 14 15 16 17 18 19 20 21 22, on right: 12 13
bool_exp (61)
    on left: 23 24, on right: 15 16 17 18 24 32
relation_and_expr (62)
    on left: 25 26, on right: 23 24 26
relation_expr_inv (63)
    on left: 27 28, on right: 25 26 27
relation_expr (64)
    on left: 29 30 31 32, on right: 28
comp (65)
    on left: 33 34 35 36 37 38, on right: 29
expressions (66)
    on left: 39 40, on right: 40 55
expression (67)
    on left: 41 42 43, on right: 14 22 29 39 40 42 43 52 53 59
multiplicative_expr (68)
    on left: 44 45 46 47, on right: 41 42 43 45 46 47
term (69)
    on left: 48 49 50 51 52 53 54 55, on right: 44 45 46 47
vars (70)
    on left: 56 57, on right: 14 19 20 57
var (71)
    on left: 58 59, on right: 48 49 56 57


State 0

    0 $accept: . prog_start $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 1 (prog_start)

    prog_start  go to state 2
    function    go to state 3


State 1

    3 function: FUNCTION . func_ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 4

    func_ident  go to state 5


State 2

    0 $accept: prog_start . $end

    $end  shift, and go to state 6


State 3

    2 prog_start: function . prog_start

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 1 (prog_start)

    prog_start  go to state 7
    function    go to state 3


State 4

    4 func_ident: IDENT .

    $default  reduce using rule 4 (func_ident)


State 5

    3 function: FUNCTION func_ident . SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    SEMICOLON  shift, and go to state 8


State 6

    0 $accept: prog_start $end .

    $default  accept


State 7

    2 prog_start: function prog_start .

    $default  reduce using rule 2 (prog_start)


State 8

    3 function: FUNCTION func_ident SEMICOLON . BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 9


State 9

    3 function: FUNCTION func_ident SEMICOLON BEGIN_PARAMS . declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 5 (declarations)

    declarations  go to state 11
    declaration   go to state 12
    identifiers   go to state 13
    ident         go to state 14


State 10

   11 ident: IDENT .

    $default  reduce using rule 11 (ident)


State 11

    3 function: FUNCTION func_ident SEMICOLON BEGIN_PARAMS declarations . END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 15


State 12

    6 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 16


State 13

    7 declaration: identifiers . COLON INTEGER
    8            | identifiers . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    COLON  shift, and go to state 17


State 14

    9 identifiers: ident .
   10            | ident . COMMA identifiers

    COMMA  shift, and go to state 18

    $default  reduce using rule 9 (identifiers)


State 15

    3 function: FUNCTION func_ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 19


State 16

    6 declarations: declaration SEMICOLON . declarations

    IDENT  shift, and go to state 10

    $default  reduce using rule 5 (declarations)

    declarations  go to state 20
    declaration   go to state 12
    identifiers   go to state 13
    ident         go to state 14


State 17

    7 declaration: identifiers COLON . INTEGER
    8            | identifiers COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 21
    ARRAY    shift, and go to state 22


State 18

   10 identifiers: ident COMMA . identifiers

    IDENT  shift, and go to state 10

    identifiers  go to state 23
    ident        go to state 14


State 19

    3 function: FUNCTION func_ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 5 (declarations)

    declarations  go to state 24
    declaration   go to state 12
    identifiers   go to state 13
    ident         go to state 14


State 20

    6 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 6 (declarations)


State 21

    7 declaration: identifiers COLON INTEGER .

    $default  reduce using rule 7 (declaration)


State 22

    8 declaration: identifiers COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 25


State 23

   10 identifiers: ident COMMA identifiers .

    $default  reduce using rule 10 (identifiers)


State 24

    3 function: FUNCTION func_ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 26


State 25

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 27


State 26

    3 function: FUNCTION func_ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 28


State 27

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 29


State 28

    3 function: FUNCTION func_ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statements END_BODY

    IDENT     shift, and go to state 10
    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36

    ident       go to state 37
    statements  go to state 38
    statement   go to state 39
    vars        go to state 40
    var         go to state 41


State 29

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 42


State 30

   15 statement: IF . bool_exp THEN statements ENDIF
   16          | IF . bool_exp THEN statements ELSE statements ENDIF

    NUMBER   shift, and go to state 43
    IDENT    shift, and go to state 10
    TRUE     shift, and go to state 44
    FALSE    shift, and go to state 45
    L_PAREN  shift, and go to state 46
    NOT      shift, and go to state 47
    SUB      shift, and go to state 48

    ident                go to state 49
    bool_exp             go to state 50
    relation_and_expr    go to state 51
    relation_expr_inv    go to state 52
    relation_expr        go to state 53
    expression           go to state 54
    multiplicative_expr  go to state 55
    term                 go to state 56
    var                  go to state 57


State 31

   17 statement: WHILE . bool_exp BEGINLOOP statements ENDLOOP

    NUMBER   shift, and go to state 43
    IDENT    shift, and go to state 10
    TRUE     shift, and go to state 44
    FALSE    shift, and go to state 45
    L_PAREN  shift, and go to state 46
    NOT      shift, and go to state 47
    SUB      shift, and go to state 48

    ident                go to state 49
    bool_exp             go to state 58
    relation_and_expr    go to state 51
    relation_expr_inv    go to state 52
    relation_expr        go to state 53
    expression           go to state 54
    multiplicative_expr  go to state 55
    term                 go to state 56
    var                  go to state 57


State 32

   18 statement: DO . BEGINLOOP statements ENDLOOP WHILE bool_exp

    BEGINLOOP  shift, and go to state 59


State 33

   21 statement: CONTINUE .

    $default  reduce using rule 21 (statement)


State 34

   19 statement: READ . vars

    IDENT  shift, and go to state 10

    ident  go to state 37
    vars   go to state 60
    var    go to state 41


State 35

   20 statement: WRITE . vars

    IDENT  shift, and go to state 10

    ident  go to state 37
    vars   go to state 61
    var    go to state 41


State 36

   22 statement: RETURN . expression

    NUMBER   shift, and go to state 43
    IDENT    shift, and go to state 10
    L_PAREN  shift, and go to state 62
    SUB      shift, and go to state 48

    ident                go to state 49
    expression           go to state 63
    multiplicative_expr  go to state 55
    term                 go to state 56
    var                  go to state 57


State 37

   58 var: ident .
   59    | ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 64

    $default  reduce using rule 58 (var)


State 38

    3 function: FUNCTION func_ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 65


State 39

   12 statements: statement . SEMICOLON
   13           | statement . SEMICOLON statements

    SEMICOLON  shift, and go to state 66


State 40

   14 statement: vars . ASSIGN expression

    ASSIGN  shift, and go to state 67


State 41

   56 vars: var .
   57     | var . COMMA vars

    COMMA  shift, and go to state 68

    $default  reduce using rule 56 (vars)


State 42

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 69


State 43

   50 term: NUMBER .

    $default  reduce using rule 50 (term)


State 44

   30 relation_expr: TRUE .

    $default  reduce using rule 30 (relation_expr)


State 45

   31 relation_expr: FALSE .

    $default  reduce using rule 31 (relation_expr)


State 46

   32 relation_expr: L_PAREN . bool_exp R_PAREN
   52 term: L_PAREN . expression R_PAREN

    NUMBER   shift, and go to state 43
    IDENT    shift, and go to state 10
    TRUE     shift, and go to state 44
    FALSE    shift, and go to state 45
    L_PAREN  shift, and go to state 46
    NOT      shift, and go to state 47
    SUB      shift, and go to state 48

    ident                go to state 49
    bool_exp             go to state 70
    relation_and_expr    go to state 51
    relation_expr_inv    go to state 52
    relation_expr        go to state 53
    expression           go to state 71
    multiplicative_expr  go to state 55
    term                 go to state 56
    var                  go to state 57


State 47

   27 relation_expr_inv: NOT . relation_expr_inv

    NUMBER   shift, and go to state 43
    IDENT    shift, and go to state 10
    TRUE     shift, and go to state 44
    FALSE    shift, and go to state 45
    L_PAREN  shift, and go to state 46
    NOT      shift, and go to state 47
    SUB      shift, and go to state 48

    ident                go to state 49
    relation_expr_inv    go to state 72
    relation_expr        go to state 53
    expression           go to state 54
    multiplicative_expr  go to state 55
    term                 go to state 56
    var                  go to state 57


State 48

   49 term: SUB . var
   51     | SUB . NUMBER
   53     | SUB . L_PAREN expression R_PAREN

    NUMBER   shift, and go to state 73
    IDENT    shift, and go to state 10
    L_PAREN  shift, and go to state 74

    ident  go to state 37
    var    go to state 75


State 49

   54 term: ident . L_PAREN R_PAREN
   55     | ident . L_PAREN expressions R_PAREN
   58 var: ident .
   59    | ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_PAREN           shift, and go to state 76
    L_SQUARE_BRACKET  shift, and go to state 64

    $default  reduce using rule 58 (var)


State 50

   15 statement: IF bool_exp . THEN statements ENDIF
   16          | IF bool_exp . THEN statements ELSE statements ENDIF

    THEN  shift, and go to state 77


State 51

   23 bool_exp: relation_and_expr .
   24         | relation_and_expr . OR bool_exp

    OR  shift, and go to state 78

    $default  reduce using rule 23 (bool_exp)


State 52

   25 relation_and_expr: relation_expr_inv .
   26                  | relation_expr_inv . AND relation_and_expr

    AND  shift, and go to state 79

    $default  reduce using rule 25 (relation_and_expr)


State 53

   28 relation_expr_inv: relation_expr .

    $default  reduce using rule 28 (relation_expr_inv)


State 54

   29 relation_expr: expression . comp expression

    LT   shift, and go to state 80
    LTE  shift, and go to state 81
    GT   shift, and go to state 82
    GTE  shift, and go to state 83
    EQ   shift, and go to state 84
    NEQ  shift, and go to state 85

    comp  go to state 86


State 55

   41 expression: multiplicative_expr .
   42           | multiplicative_expr . ADD expression
   43           | multiplicative_expr . SUB expression

    ADD  shift, and go to state 87
    SUB  shift, and go to state 88

    $default  reduce using rule 41 (expression)


State 56

   44 multiplicative_expr: term .
   45                    | term . MULT multiplicative_expr
   46                    | term . DIV multiplicative_expr
   47                    | term . MOD multiplicative_expr

    MULT  shift, and go to state 89
    DIV   shift, and go to state 90
    MOD   shift, and go to state 91

    $default  reduce using rule 44 (multiplicative_expr)


State 57

   48 term: var .

    $default  reduce using rule 48 (term)


State 58

   17 statement: WHILE bool_exp . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 92


State 59

   18 statement: DO BEGINLOOP . statements ENDLOOP WHILE bool_exp

    IDENT     shift, and go to state 10
    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36

    ident       go to state 37
    statements  go to state 93
    statement   go to state 39
    vars        go to state 40
    var         go to state 41


State 60

   19 statement: READ vars .

    $default  reduce using rule 19 (statement)


State 61

   20 statement: WRITE vars .

    $default  reduce using rule 20 (statement)


State 62

   52 term: L_PAREN . expression R_PAREN

    NUMBER   shift, and go to state 43
    IDENT    shift, and go to state 10
    L_PAREN  shift, and go to state 62
    SUB      shift, and go to state 48

    ident                go to state 49
    expression           go to state 94
    multiplicative_expr  go to state 55
    term                 go to state 56
    var                  go to state 57


State 63

   22 statement: RETURN expression .

    $default  reduce using rule 22 (statement)


State 64

   59 var: ident L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    NUMBER   shift, and go to state 43
    IDENT    shift, and go to state 10
    L_PAREN  shift, and go to state 62
    SUB      shift, and go to state 48

    ident                go to state 49
    expression           go to state 95
    multiplicative_expr  go to state 55
    term                 go to state 56
    var                  go to state 57


State 65

    3 function: FUNCTION func_ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 3 (function)


State 66

   12 statements: statement SEMICOLON .
   13           | statement SEMICOLON . statements

    IDENT     shift, and go to state 10
    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36

    $default  reduce using rule 12 (statements)

    ident       go to state 37
    statements  go to state 96
    statement   go to state 39
    vars        go to state 40
    var         go to state 41


State 67

   14 statement: vars ASSIGN . expression

    NUMBER   shift, and go to state 43
    IDENT    shift, and go to state 10
    L_PAREN  shift, and go to state 62
    SUB      shift, and go to state 48

    ident                go to state 49
    expression           go to state 97
    multiplicative_expr  go to state 55
    term                 go to state 56
    var                  go to state 57


State 68

   57 vars: var COMMA . vars

    IDENT  shift, and go to state 10

    ident  go to state 37
    vars   go to state 98
    var    go to state 41


State 69

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 8 (declaration)


State 70

   32 relation_expr: L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 99


State 71

   29 relation_expr: expression . comp expression
   52 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 100
    LT       shift, and go to state 80
    LTE      shift, and go to state 81
    GT       shift, and go to state 82
    GTE      shift, and go to state 83
    EQ       shift, and go to state 84
    NEQ      shift, and go to state 85

    comp  go to state 86


State 72

   27 relation_expr_inv: NOT relation_expr_inv .

    $default  reduce using rule 27 (relation_expr_inv)


State 73

   51 term: SUB NUMBER .

    $default  reduce using rule 51 (term)


State 74

   53 term: SUB L_PAREN . expression R_PAREN

    NUMBER   shift, and go to state 43
    IDENT    shift, and go to state 10
    L_PAREN  shift, and go to state 62
    SUB      shift, and go to state 48

    ident                go to state 49
    expression           go to state 101
    multiplicative_expr  go to state 55
    term                 go to state 56
    var                  go to state 57


State 75

   49 term: SUB var .

    $default  reduce using rule 49 (term)


State 76

   54 term: ident L_PAREN . R_PAREN
   55     | ident L_PAREN . expressions R_PAREN

    NUMBER   shift, and go to state 43
    IDENT    shift, and go to state 10
    L_PAREN  shift, and go to state 62
    R_PAREN  shift, and go to state 102
    SUB      shift, and go to state 48

    ident                go to state 49
    expressions          go to state 103
    expression           go to state 104
    multiplicative_expr  go to state 55
    term                 go to state 56
    var                  go to state 57


State 77

   15 statement: IF bool_exp THEN . statements ENDIF
   16          | IF bool_exp THEN . statements ELSE statements ENDIF

    IDENT     shift, and go to state 10
    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36

    ident       go to state 37
    statements  go to state 105
    statement   go to state 39
    vars        go to state 40
    var         go to state 41


State 78

   24 bool_exp: relation_and_expr OR . bool_exp

    NUMBER   shift, and go to state 43
    IDENT    shift, and go to state 10
    TRUE     shift, and go to state 44
    FALSE    shift, and go to state 45
    L_PAREN  shift, and go to state 46
    NOT      shift, and go to state 47
    SUB      shift, and go to state 48

    ident                go to state 49
    bool_exp             go to state 106
    relation_and_expr    go to state 51
    relation_expr_inv    go to state 52
    relation_expr        go to state 53
    expression           go to state 54
    multiplicative_expr  go to state 55
    term                 go to state 56
    var                  go to state 57


State 79

   26 relation_and_expr: relation_expr_inv AND . relation_and_expr

    NUMBER   shift, and go to state 43
    IDENT    shift, and go to state 10
    TRUE     shift, and go to state 44
    FALSE    shift, and go to state 45
    L_PAREN  shift, and go to state 46
    NOT      shift, and go to state 47
    SUB      shift, and go to state 48

    ident                go to state 49
    relation_and_expr    go to state 107
    relation_expr_inv    go to state 52
    relation_expr        go to state 53
    expression           go to state 54
    multiplicative_expr  go to state 55
    term                 go to state 56
    var                  go to state 57


State 80

   35 comp: LT .

    $default  reduce using rule 35 (comp)


State 81

   37 comp: LTE .

    $default  reduce using rule 37 (comp)


State 82

   36 comp: GT .

    $default  reduce using rule 36 (comp)


State 83

   38 comp: GTE .

    $default  reduce using rule 38 (comp)


State 84

   33 comp: EQ .

    $default  reduce using rule 33 (comp)


State 85

   34 comp: NEQ .

    $default  reduce using rule 34 (comp)


State 86

   29 relation_expr: expression comp . expression

    NUMBER   shift, and go to state 43
    IDENT    shift, and go to state 10
    L_PAREN  shift, and go to state 62
    SUB      shift, and go to state 48

    ident                go to state 49
    expression           go to state 108
    multiplicative_expr  go to state 55
    term                 go to state 56
    var                  go to state 57


State 87

   42 expression: multiplicative_expr ADD . expression

    NUMBER   shift, and go to state 43
    IDENT    shift, and go to state 10
    L_PAREN  shift, and go to state 62
    SUB      shift, and go to state 48

    ident                go to state 49
    expression           go to state 109
    multiplicative_expr  go to state 55
    term                 go to state 56
    var                  go to state 57


State 88

   43 expression: multiplicative_expr SUB . expression

    NUMBER   shift, and go to state 43
    IDENT    shift, and go to state 10
    L_PAREN  shift, and go to state 62
    SUB      shift, and go to state 48

    ident                go to state 49
    expression           go to state 110
    multiplicative_expr  go to state 55
    term                 go to state 56
    var                  go to state 57


State 89

   45 multiplicative_expr: term MULT . multiplicative_expr

    NUMBER   shift, and go to state 43
    IDENT    shift, and go to state 10
    L_PAREN  shift, and go to state 62
    SUB      shift, and go to state 48

    ident                go to state 49
    multiplicative_expr  go to state 111
    term                 go to state 56
    var                  go to state 57


State 90

   46 multiplicative_expr: term DIV . multiplicative_expr

    NUMBER   shift, and go to state 43
    IDENT    shift, and go to state 10
    L_PAREN  shift, and go to state 62
    SUB      shift, and go to state 48

    ident                go to state 49
    multiplicative_expr  go to state 112
    term                 go to state 56
    var                  go to state 57


State 91

   47 multiplicative_expr: term MOD . multiplicative_expr

    NUMBER   shift, and go to state 43
    IDENT    shift, and go to state 10
    L_PAREN  shift, and go to state 62
    SUB      shift, and go to state 48

    ident                go to state 49
    multiplicative_expr  go to state 113
    term                 go to state 56
    var                  go to state 57


State 92

   17 statement: WHILE bool_exp BEGINLOOP . statements ENDLOOP

    IDENT     shift, and go to state 10
    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36

    ident       go to state 37
    statements  go to state 114
    statement   go to state 39
    vars        go to state 40
    var         go to state 41


State 93

   18 statement: DO BEGINLOOP statements . ENDLOOP WHILE bool_exp

    ENDLOOP  shift, and go to state 115


State 94

   52 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 100


State 95

   59 var: ident L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 116


State 96

   13 statements: statement SEMICOLON statements .

    $default  reduce using rule 13 (statements)


State 97

   14 statement: vars ASSIGN expression .

    $default  reduce using rule 14 (statement)


State 98

   57 vars: var COMMA vars .

    $default  reduce using rule 57 (vars)


State 99

   32 relation_expr: L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 32 (relation_expr)


State 100

   52 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 52 (term)


State 101

   53 term: SUB L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 117


State 102

   54 term: ident L_PAREN R_PAREN .

    $default  reduce using rule 54 (term)


State 103

   55 term: ident L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 118


State 104

   39 expressions: expression .
   40            | expression . COMMA expressions

    COMMA  shift, and go to state 119

    $default  reduce using rule 39 (expressions)


State 105

   15 statement: IF bool_exp THEN statements . ENDIF
   16          | IF bool_exp THEN statements . ELSE statements ENDIF

    ENDIF  shift, and go to state 120
    ELSE   shift, and go to state 121


State 106

   24 bool_exp: relation_and_expr OR bool_exp .

    $default  reduce using rule 24 (bool_exp)


State 107

   26 relation_and_expr: relation_expr_inv AND relation_and_expr .

    $default  reduce using rule 26 (relation_and_expr)


State 108

   29 relation_expr: expression comp expression .

    $default  reduce using rule 29 (relation_expr)


State 109

   42 expression: multiplicative_expr ADD expression .

    $default  reduce using rule 42 (expression)


State 110

   43 expression: multiplicative_expr SUB expression .

    $default  reduce using rule 43 (expression)


State 111

   45 multiplicative_expr: term MULT multiplicative_expr .

    $default  reduce using rule 45 (multiplicative_expr)


State 112

   46 multiplicative_expr: term DIV multiplicative_expr .

    $default  reduce using rule 46 (multiplicative_expr)


State 113

   47 multiplicative_expr: term MOD multiplicative_expr .

    $default  reduce using rule 47 (multiplicative_expr)


State 114

   17 statement: WHILE bool_exp BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 122


State 115

   18 statement: DO BEGINLOOP statements ENDLOOP . WHILE bool_exp

    WHILE  shift, and go to state 123


State 116

   59 var: ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 59 (var)


State 117

   53 term: SUB L_PAREN expression R_PAREN .

    $default  reduce using rule 53 (term)


State 118

   55 term: ident L_PAREN expressions R_PAREN .

    $default  reduce using rule 55 (term)


State 119

   40 expressions: expression COMMA . expressions

    NUMBER   shift, and go to state 43
    IDENT    shift, and go to state 10
    L_PAREN  shift, and go to state 62
    SUB      shift, and go to state 48

    ident                go to state 49
    expressions          go to state 124
    expression           go to state 104
    multiplicative_expr  go to state 55
    term                 go to state 56
    var                  go to state 57


State 120

   15 statement: IF bool_exp THEN statements ENDIF .

    $default  reduce using rule 15 (statement)


State 121

   16 statement: IF bool_exp THEN statements ELSE . statements ENDIF

    IDENT     shift, and go to state 10
    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36

    ident       go to state 37
    statements  go to state 125
    statement   go to state 39
    vars        go to state 40
    var         go to state 41


State 122

   17 statement: WHILE bool_exp BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 17 (statement)


State 123

   18 statement: DO BEGINLOOP statements ENDLOOP WHILE . bool_exp

    NUMBER   shift, and go to state 43
    IDENT    shift, and go to state 10
    TRUE     shift, and go to state 44
    FALSE    shift, and go to state 45
    L_PAREN  shift, and go to state 46
    NOT      shift, and go to state 47
    SUB      shift, and go to state 48

    ident                go to state 49
    bool_exp             go to state 126
    relation_and_expr    go to state 51
    relation_expr_inv    go to state 52
    relation_expr        go to state 53
    expression           go to state 54
    multiplicative_expr  go to state 55
    term                 go to state 56
    var                  go to state 57


State 124

   40 expressions: expression COMMA expressions .

    $default  reduce using rule 40 (expressions)


State 125

   16 statement: IF bool_exp THEN statements ELSE statements . ENDIF

    ENDIF  shift, and go to state 127


State 126

   18 statement: DO BEGINLOOP statements ENDLOOP WHILE bool_exp .

    $default  reduce using rule 18 (statement)


State 127

   16 statement: IF bool_exp THEN statements ELSE statements ENDIF .

    $default  reduce using rule 16 (statement)
